name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # 触发条件：推送 v 开头的 tag（如 v0.5.0）

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""
          # - platform: "macos-latest"
          #   args: "--target universal-apple-darwin"
          # - platform: "ubuntu-22.04"
          #   args: ""

    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write # 需要写入权限来创建 release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # macOS 需要额外的 target
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: pnpm install

      - name: Extract release notes from CHANGELOG
        id: extract_notes
        shell: bash
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # 从 CHANGELOG.md 提取当前版本的发布说明
          NOTES=$(awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | \
            sed '/## \['"$VERSION"'\]/d' | \
            sed '/## \[/,$d' | \
            sed '/^$/N;/^\n$/D')
          
          # 如果提取失败，使用默认说明
          if [ -z "$NOTES" ]; then
            NOTES="Release $VERSION"
          fi
          
          # 保存到文件用于 tauri-action
          echo "$NOTES" > release_notes.md

      - name: Append footer to release notes
        shell: bash
        run: |
          echo "" >> release_notes.md
          echo "---" >> release_notes.md
          echo "" >> release_notes.md
          echo "查看完整变更日志: [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)" >> release_notes.md

      - name: Build and upload to Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "v${{ steps.extract_notes.outputs.VERSION }}"
          releaseBodyPath: release_notes.md
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
